{"ast":null,"code":"var _jsxFileName = \"/home/user42/42/react/part2/notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  // App states\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n\n  const hook = () => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const toggleImportanceOf = id => {\n    console.log('importance of ' + id + 'needs to be toggled');\n  }; // add new note\n\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      setNotes(notes.concat(noteObject));\n      setNewNote('');\n    });\n  }; // setting new note in the form\n\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  }; // notes to show\n\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" save \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YoJCZcz2gqmCo+muBMJeaVoxZWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Note","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","hook","console","log","get","then","response","data","toggleImportanceOf","id","addNote","event","preventDefault","noteObject","content","date","Date","important","Math","random","post","concat","handleNoteChange","target","value","notesToShow","filter","note","map"],"sources":["/home/user42/42/react/part2/notes/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  // App states\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }\n  useEffect(hook, [])\n\n  const toggleImportanceOf = (id) => {\n    console.log('importance of ' + id + 'needs to be toggled')\n  }\n\n  // add new note\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    }\n    axios\n      .post('http://localhost:3001/notes', noteObject)\n      .then(response => {\n        setNotes(notes.concat(noteObject))\n        setNewNote('')\n      })\n  }\n\n  // setting new note in the form\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  // notes to show\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\"> save </button>\n      </form>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}